// <auto-generated />
using FeatureApplication.ApplicationContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FeatureApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FeatureApplication.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("City")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Email")
                        .HasMaxLength(100);

                    b.Property<string>("Gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("CustomerId");

                    b.HasIndex("Name");

                    b.ToTable("Customer","mst");
                });

            modelBuilder.Entity("FeatureApplication.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments")
                        .HasMaxLength(500);

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<Guid?>("CustomerId1");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<decimal>("Discount");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId1");

                    b.ToTable("Order","mst");
                });

            modelBuilder.Entity("FeatureApplication.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderDetailId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Discount");

                    b.Property<int>("OrderId");

                    b.Property<Guid?>("OrderId1");

                    b.Property<int>("ProductId");

                    b.Property<Guid?>("ProductId1");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitPrice");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId1");

                    b.HasIndex("ProductId1");

                    b.ToTable("OrderDetail","mst");
                });

            modelBuilder.Entity("FeatureApplication.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("BuyingPrice");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Icon")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDiscontinued");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int?>("ParentId");

                    b.Property<Guid?>("ParentProductId");

                    b.Property<int>("ProductCategoryId");

                    b.Property<Guid?>("ProductCategoryId1");

                    b.Property<decimal>("SellingPrice");

                    b.Property<int>("UnitsInStock");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ProductId");

                    b.HasIndex("Name");

                    b.HasIndex("ParentProductId");

                    b.HasIndex("ProductCategoryId1");

                    b.ToTable("Product","mst");
                });

            modelBuilder.Entity("FeatureApplication.Models.ProductCategory", b =>
                {
                    b.Property<Guid>("ProductCategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<string>("Icon");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory","mst");
                });

            modelBuilder.Entity("FeatureApplication.Models.Order", b =>
                {
                    b.HasOne("FeatureApplication.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId1");
                });

            modelBuilder.Entity("FeatureApplication.Models.OrderDetail", b =>
                {
                    b.HasOne("FeatureApplication.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId1");

                    b.HasOne("FeatureApplication.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId1");
                });

            modelBuilder.Entity("FeatureApplication.Models.Product", b =>
                {
                    b.HasOne("FeatureApplication.Models.Product", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FeatureApplication.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId1");
                });
#pragma warning restore 612, 618
        }
    }
}
